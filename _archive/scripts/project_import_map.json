{
  "MockTool": "from tests.unit.test_integration_fixes import MockTool",
  "EnvironmentSetup": "from setup_environment import EnvironmentSetup",
  "ErrorSeverity": "from comprehensive_code_auditor import ErrorSeverity",
  "CodeIssue": "from comprehensive_code_auditor import CodeIssue",
  "ComprehensiveCodeAuditor": "from comprehensive_code_auditor import ComprehensiveCodeAuditor",
  "ImportVisitor": "from comprehensive_code_auditor import ImportVisitor",
  "NameVisitor": "from comprehensive_code_auditor import NameVisitor",
  "UsageVisitor": "from comprehensive_code_auditor import UsageVisitor",
  "FunctionVisitor": "from comprehensive_code_auditor import FunctionVisitor",
  "ClassVisitor": "from comprehensive_code_auditor import ClassVisitor",
  "TypeVisitor": "from comprehensive_code_auditor import TypeVisitor",
  "ExceptionVisitor": "from comprehensive_code_auditor import ExceptionVisitor",
  "AsyncVisitor": "from comprehensive_code_auditor import AsyncVisitor",
  "AntipatternVisitor": "from comprehensive_code_auditor import AntipatternVisitor",
  "DocstringVisitor": "from comprehensive_code_auditor import DocstringVisitor",
  "ComplexityVisitor": "from comprehensive_code_auditor import ComplexityVisitor",
  "ImportInfo": "from import_auditor import ImportInfo",
  "ImportError": "from import_auditor import ImportError",
  "ImportAuditor": "from import_auditor import ImportAuditor",
  "SmartAutoFixer": "from smart_auto_fixer import SmartAutoFixer",
  "SyntaxErrorFixer": "from syntax_error_fixer import SyntaxErrorFixer",
  "MockCircuitBreaker": "from performance_test_suite import MockCircuitBreaker",
  "MockParallelExecutor": "from performance_test_suite import MockParallelExecutor",
  "PerformanceTestSuite": "from performance_test_suite import PerformanceTestSuite",
  "SimpleGAIAAgent": "from agent import SimpleGAIAAgent",
  "DeepIssueAnalyzer": "from deep_issue_analyzer import DeepIssueAnalyzer",
  "AIAgentApp": "from app import AIAgentApp",
  "UndefinedVariable": "from enhanced_auto_fixer import UndefinedVariable",
  "EnhancedAutoFixer": "from enhanced_auto_fixer import EnhancedAutoFixer",
  "MockCircuitBreakerRegistry": "from performance_dashboard import MockCircuitBreakerRegistry",
  "PerformanceMetrics": "from src.shared.types import PerformanceMetrics",
  "PerformanceDashboard": "from performance_dashboard import PerformanceDashboard",
  "TestProductionGAIAIntegration": "from tests.test_gaia_production import TestProductionGAIAIntegration",
  "TestPerformanceBenchmarks": "from tests.test_gaia_production import TestPerformanceBenchmarks",
  "TestMonitoringAndObservability": "from tests.test_gaia_production import TestMonitoringAndObservability",
  "TestProductionReadiness": "from tests.test_gaia_production import TestProductionReadiness",
  "GAIAUser": "from tests.load_test import GAIAUser",
  "AdminUser": "from tests.load_test import AdminUser",
  "StressTestUser": "from tests.load_test import StressTestUser",
  "CustomMetrics": "from tests.load_test import CustomMetrics",
  "TestConfigValidation": "from tests.test_config_validation import TestConfigValidation",
  "AgentStatus": "from examples.advanced.multiagent_api_deployment import AgentStatus",
  "TaskResult": "from src.unified_architecture.enhanced_platform import TaskResult",
  "ParallelExecutor": "from src.application.executors.parallel_executor import ParallelExecutor",
  "TestProcessMessageUseCase": "from tests.test_complete_system import TestProcessMessageUseCase",
  "TestConcreteAgents": "from tests.test_complete_system import TestConcreteAgents",
  "TestAgentFactory": "from tests.unit.test_agent_factory import TestAgentFactory",
  "TestParallelExecution": "from tests.test_complete_system import TestParallelExecution",
  "TestMetrics": "from tests.test_complete_system import TestMetrics",
  "TestIntegration": "from tests.integration.test_unified_architecture import TestIntegration",
  "TestPerformance": "from tests.integration.test_integration import TestPerformance",
  "TestAgent": "from tests.unit.test_core_entities import TestAgent",
  "MockSearchTool": "from examples.gaia_usage_example import MockSearchTool",
  "MockCalculatorTool": "from examples.gaia_usage_example import MockCalculatorTool",
  "MockAnalyzerTool": "from examples.gaia_usage_example import MockAnalyzerTool",
  "MockAgent": "from tests.integration.test_unified_architecture import MockAgent",
  "CoTBenchmarkSuite": "from benchmarks.cot_performance import CoTBenchmarkSuite",
  "MemoryProfiler": "from benchmarks.cot_performance import MemoryProfiler",
  "LoadTester": "from benchmarks.cot_performance import LoadTester",
  "BackupType": "from scripts.backup import BackupType",
  "StorageBackend": "from scripts.backup import StorageBackend",
  "BackupConfig": "from scripts.backup import BackupConfig",
  "BackupMetadata": "from scripts.backup import BackupMetadata",
  "BackupManager": "from scripts.backup import BackupManager",
  "LocalBackupStorage": "from scripts.backup import LocalBackupStorage",
  "S3BackupStorage": "from scripts.backup import S3BackupStorage",
  "GCSBackupStorage": "from scripts.backup import GCSBackupStorage",
  "AzureBackupStorage": "from scripts.backup import AzureBackupStorage",
  "BackupScheduler": "from scripts.backup import BackupScheduler",
  "TestResult": "from scripts.performance_test import TestResult",
  "PerformanceTester": "from tests.performance.performance_test import PerformanceTester",
  "ToolMetric": "from src.database_extended import ToolMetric",
  "ToolPerformance": "from src.gaia_components.adaptive_tool_system import ToolPerformance",
  "ExtendedDatabase": "from src.database_extended import ExtendedDatabase",
  "QueryCategory": "from src.query_classifier import QueryCategory",
  "OperationalParameters": "from src.query_classifier import OperationalParameters",
  "QueryClassifier": "from src.query_classifier import QueryClassifier",
  "AgentRegistrationRequest": "from examples.advanced.multiagent_api_deployment import AgentRegistrationRequest",
  "AgentResponse": "from src.api_server import AgentResponse",
  "TaskSubmissionRequest": "from examples.advanced.multiagent_api_deployment import TaskSubmissionRequest",
  "TaskResponse": "from src.api_server import TaskResponse",
  "ResourceRequest": "from src.api_server import ResourceRequest",
  "ResourceResponse": "from src.api_server import ResourceResponse",
  "ConflictReportRequest": "from examples.advanced.multiagent_api_deployment import ConflictReportRequest",
  "ConflictResponse": "from src.api_server import ConflictResponse",
  "WorkflowDefinitionRequest": "from src.api_server import WorkflowDefinitionRequest",
  "WorkflowExecutionRequest": "from src.api_server import WorkflowExecutionRequest",
  "PerformanceMetricsResponse": "from src.api_server import PerformanceMetricsResponse",
  "SystemHealthResponse": "from src.api_server import SystemHealthResponse",
  "WebSocketMessage": "from src.api_server import WebSocketMessage",
  "ConnectionManager": "from src.api_server import ConnectionManager",
  "ToolError": "from src.tools_introspection import ToolError",
  "ToolAnalysis": "from src.tools_introspection import ToolAnalysis",
  "ToolIntrospector": "from src.utils.tools_introspection import ToolIntrospector",
  "AnalyzeToolErrorTool": "from src.tools_introspection import AnalyzeToolErrorTool",
  "GetToolPerformanceTool": "from src.tools_introspection import GetToolPerformanceTool",
  "SuggestImprovementsTool": "from src.tools_introspection import SuggestImprovementsTool",
  "MockError": "from src.tools_introspection import MockError",
  "AIAgentApplication": "from src.main import AIAgentApplication",
  "InteractionType": "from src.tools_interactive import InteractionType",
  "InteractiveState": "from src.utils.tools_interactive import InteractiveState",
  "ClarificationTracker": "from src.tools_interactive import ClarificationTracker",
  "ClarificationTool": "from src.tools_interactive import ClarificationTool",
  "ApprovalTool": "from src.tools_interactive import ApprovalTool",
  "ConfirmationTool": "from src.tools_interactive import ConfirmationTool",
  "WebSearchTool": "from src.utils.base_tool import WebSearchTool",
  "PythonInterpreterTool": "from src.tools_enhanced import PythonInterpreterTool",
  "FileReaderTool": "from src.tools_enhanced import FileReaderTool",
  "WeatherTool": "from src.agents.advanced_hybrid_architecture import WeatherTool",
  "CalculatorTool": "from src.utils.base_tool import CalculatorTool",
  "WikipediaTool": "from src.tools_enhanced import WikipediaTool",
  "SemanticSearchTool": "from src.agents.advanced_hybrid_architecture import SemanticSearchTool",
  "DataAnalysisTool": "from src.tools_enhanced import DataAnalysisTool",
  "CodeAnalysisTool": "from src.utils.base_tool import CodeAnalysisTool",
  "SupabaseManager": "from src.database.supabase_manager import SupabaseManager",
  "User": "from src.api.auth import User",
  "Permission": "from src.api.auth import Permission",
  "Session": "from src.database.models import Session",
  "Query": "from src.shared.types.di_types import Query",
  "ToolCall": "from src.agents.advanced_agent_fsm import ToolCall",
  "Agent": "from src.core.entities.agent import Agent",
  "Tool": "from src.core.entities.tool import Tool",
  "AgentExecution": "from src.database.models import AgentExecution",
  "ToolExecution": "from src.database.models import ToolExecution",
  "Memory": "from src.database.models import Memory",
  "VectorStore": "from src.gaia_components.advanced_reasoning_engine import VectorStore",
  "Embedding": "from src.database.models import Embedding",
  "PerformanceMetric": "from src.database.models import PerformanceMetric",
  "SystemHealth": "from src.database.models import SystemHealth",
  "Backup": "from src.database.models import Backup",
  "AuditLog": "from src.database.models import AuditLog",
  "ConnectionStats": "from src.database.connection_pool import ConnectionStats",
  "DatabaseConnection": "from src.database.connection_pool import DatabaseConnection",
  "DatabasePool": "from src.database.connection_pool import DatabasePool",
  "CollaborationType": "from src.collaboration.realtime_collaboration import CollaborationType",
  "SessionStatus": "from src.collaboration.realtime_collaboration import SessionStatus",
  "CollaborationSession": "from src.collaboration.realtime_collaboration import CollaborationSession",
  "CollaborationEvent": "from src.collaboration.realtime_collaboration import CollaborationEvent",
  "AgentHandoff": "from src.collaboration.realtime_collaboration import AgentHandoff",
  "CollaborationManager": "from src.collaboration.realtime_collaboration import CollaborationManager",
  "CollaborationWebSocketHandler": "from src.collaboration.realtime_collaboration import CollaborationWebSocketHandler",
  "ToolMetadata": "from src.tools.registry import ToolMetadata",
  "ToolRegistry": "from src.core.entities.tool import ToolRegistry",
  "ToolResult": "from src.core.entities.tool import ToolResult",
  "BaseTool": "from src.shared.types.di_types import BaseTool",
  "FunctionTool": "from src.tools.base_tool import FunctionTool",
  "ReasoningType": "from src.reasoning.reasoning_path import ReasoningType",
  "ReasoningStep": "from examples.basic.simple_hybrid_demo import ReasoningStep",
  "ReasoningPath": "from src.reasoning.reasoning_path import ReasoningPath",
  "AdvancedReasoning": "from src.reasoning.reasoning_path import AdvancedReasoning",
  "LoopPreventionState": "from src.core.langgraph_resilience_patterns import LoopPreventionState",
  "ToolErrorStrategy": "from src.core.langgraph_resilience_patterns import ToolErrorStrategy",
  "ErrorRecoveryState": "from src.core.langgraph_resilience_patterns import ErrorRecoveryState",
  "ToolExecutionResult": "from src.utils.error_category import ToolExecutionResult",
  "StateValidator": "from src.core.langgraph_resilience_patterns import StateValidator",
  "ResilientAPIClient": "from src.agents.advanced_agent_fsm import ResilientAPIClient",
  "PlanResponse": "from src.agents.advanced_agent_fsm import PlanResponse",
  "PlanStep": "from src.agents.advanced_agent_fsm import PlanStep",
  "MetricsCollector": "from src.shared.types.di_types import MetricsCollector",
  "ToolExecutor": "from src.core.interfaces.tool_executor import ToolExecutor",
  "ToolExecutorAdapter": "from src.core.langgraph_compatibility import ToolExecutorAdapter",
  "AIAgentException": "from src.shared.exceptions import AIAgentException",
  "ToolExecutionError": "from src.core.exceptions import ToolExecutionError",
  "CircuitBreakerOpenError": "from src.infrastructure.resilience.circuit_breaker import CircuitBreakerOpenError",
  "MaxRetriesExceededError": "from src.core.exceptions import MaxRetriesExceededError",
  "DatabaseConnectionError": "from src.core.exceptions import DatabaseConnectionError",
  "ConfigurationError": "from src.core.exceptions import ConfigurationError",
  "ValidationError": "from src.core.exceptions import ValidationError",
  "TimeoutError": "from src.core.exceptions import TimeoutError",
  "ResourceNotFoundError": "from src.core.exceptions import ResourceNotFoundError",
  "PermissionError": "from src.core.exceptions import PermissionError",
  "HealthStatus": "from src.shared.types import HealthStatus",
  "HealthCheck": "from src.core.health_check import HealthCheck",
  "HealthChecker": "from src.core.health_check import HealthChecker",
  "EnhancedKnowledgeBase": "from src.agents.crew_enhanced import EnhancedKnowledgeBase",
  "MultiModalGAIAIndex": "from src.agents.crew_enhanced import MultiModalGAIAIndex",
  "IncrementalKnowledgeBase": "from src.agents.crew_enhanced import IncrementalKnowledgeBase",
  "GAIAQueryEngine": "from src.agents.crew_enhanced import GAIAQueryEngine",
  "CustomMetricsCallback": "from src.core.langchain_enhanced import CustomMetricsCallback",
  "ErrorRecoveryCallback": "from src.core.langchain_enhanced import ErrorRecoveryCallback",
  "ParallelToolExecutor": "from src.core.langchain_enhanced import ParallelToolExecutor",
  "EnhancedLangChainAgent": "from src.core.langchain_enhanced import EnhancedLangChainAgent",
  "CachedReasoning": "from src.core.optimized_chain_of_thought import CachedReasoning",
  "ComplexityAnalyzer": "from examples.basic.simple_hybrid_demo import ComplexityAnalyzer",
  "ReasoningTemplate": "from src.core.optimized_chain_of_thought import ReasoningTemplate",
  "MathematicalReasoningTemplate": "from src.core.optimized_chain_of_thought import MathematicalReasoningTemplate",
  "AnalyticalReasoningTemplate": "from src.core.optimized_chain_of_thought import AnalyticalReasoningTemplate",
  "ComparativeReasoningTemplate": "from src.core.optimized_chain_of_thought import ComparativeReasoningTemplate",
  "CausalReasoningTemplate": "from src.core.optimized_chain_of_thought import CausalReasoningTemplate",
  "TemplateLibrary": "from examples.basic.simple_hybrid_demo import TemplateLibrary",
  "ReasoningCache": "from src.core.optimized_chain_of_thought import ReasoningCache",
  "MultiPathReasoning": "from src.core.optimized_chain_of_thought import MultiPathReasoning",
  "PathGenerator": "from src.core.optimized_chain_of_thought import PathGenerator",
  "MetacognitiveLayer": "from src.core.optimized_chain_of_thought import MetacognitiveLayer",
  "OptimizedChainOfThought": "from src.core.optimized_chain_of_thought import OptimizedChainOfThought",
  "DefaultTemplate": "from src.core.optimized_chain_of_thought import DefaultTemplate",
  "LoggingConfig": "from src.shared.types import LoggingConfig",
  "DatabaseConfig": "from src.shared.types import DatabaseConfig",
  "APIConfig": "from src.config.settings import APIConfig",
  "MonitoringConfig": "from src.config.settings import MonitoringConfig",
  "Settings": "from src.config.settings import Settings",
  "AdvancedReasoningEngine": "from src.gaia_components.advanced_reasoning_engine import AdvancedReasoningEngine",
  "SimpleEmbeddings": "from src.gaia_components.advanced_reasoning_engine import SimpleEmbeddings",
  "AgentType": "from src.core.entities.agent import AgentType",
  "TaskPriority": "from src.gaia_components.multi_agent_orchestrator import TaskPriority",
  "TaskStatus": "from src.unified_architecture.enhanced_platform import TaskStatus",
  "Task": "from src.gaia_components.multi_agent_orchestrator import Task",
  "TaskScheduler": "from src.gaia_components.multi_agent_orchestrator import TaskScheduler",
  "WorkflowEngine": "from src.infrastructure.workflow.workflow_engine import WorkflowEngine",
  "CommunicationHub": "from src.gaia_components.multi_agent_orchestrator import CommunicationHub",
  "MultiAgentOrchestrator": "from src.gaia_components.multi_agent_orchestrator import MultiAgentOrchestrator",
  "MultiAgentGAIASystem": "from src.gaia_components.multi_agent_orchestrator import MultiAgentGAIASystem",
  "HealthCheckHandler": "from src.gaia_components.monitoring import HealthCheckHandler",
  "PerformanceMonitor": "from src.agents.advanced_agent_fsm import PerformanceMonitor",
  "MemoryMonitor": "from src.gaia_components.monitoring import MemoryMonitor",
  "MockMetric": "from src.gaia_components.monitoring import MockMetric",
  "MemoryType": "from src.gaia_components.enhanced_memory_system import MemoryType",
  "MemoryPriority": "from src.gaia_components.enhanced_memory_system import MemoryPriority",
  "MemoryItem": "from src.gaia_components.enhanced_memory_system import MemoryItem",
  "EpisodicMemory": "from src.gaia_components.enhanced_memory_system import EpisodicMemory",
  "SemanticMemory": "from src.gaia_components.enhanced_memory_system import SemanticMemory",
  "WorkingMemory": "from src.gaia_components.enhanced_memory_system import WorkingMemory",
  "EnhancedMemorySystem": "from src.gaia_components.enhanced_memory_system import EnhancedMemorySystem",
  "PerformanceOptimizer": "from src.gaia_components.performance_optimization import PerformanceOptimizer",
  "ConnectionPool": "from src.gaia_components.performance_optimization import ConnectionPool",
  "OptimizedGAIASystem": "from src.gaia_components.performance_optimization import OptimizedGAIASystem",
  "MemoryOptimizer": "from src.gaia_components.performance_optimization import MemoryOptimizer",
  "ToolType": "from src.core.entities.tool import ToolType",
  "ToolStatus": "from src.core.entities.tool import ToolStatus",
  "ToolCapability": "from src.agents.advanced_agent_fsm import ToolCapability",
  "ToolRecommendationEngine": "from src.gaia_components.adaptive_tool_system import ToolRecommendationEngine",
  "FailureRecoveryEngine": "from src.gaia_components.adaptive_tool_system import FailureRecoveryEngine",
  "AdaptiveToolSystem": "from src.gaia_components.adaptive_tool_system import AdaptiveToolSystem",
  "VectorStoreInterface": "from src.gaia_components.production_vector_store import VectorStoreInterface",
  "ProductionEmbeddings": "from src.gaia_components.production_vector_store import ProductionEmbeddings",
  "ChromaVectorStore": "from src.gaia_components.production_vector_store import ChromaVectorStore",
  "PineconeVectorStore": "from src.gaia_components.production_vector_store import PineconeVectorStore",
  "InMemoryVectorStore": "from src.gaia_components.production_vector_store import InMemoryVectorStore",
  "AsyncVectorStore": "from src.gaia_components.production_vector_store import AsyncVectorStore",
  "FallbackEmbeddings": "from src.gaia_components.production_vector_store import FallbackEmbeddings",
  "ToolExecutionStatus": "from src.gaia_components.tool_executor import ToolExecutionStatus",
  "ProductionToolExecutor": "from src.gaia_components.tool_executor import ProductionToolExecutor",
  "BuiltInTools": "from src.gaia_components.tool_executor import BuiltInTools",
  "AgentMode": "from src.agents.advanced_hybrid_architecture import AgentMode",
  "AgentState": "from examples.basic.simple_hybrid_demo import AgentState",
  "AdvancedHybridAgent": "from src.agents.advanced_hybrid_architecture import AdvancedHybridAgent",
  "AdaptiveModeSelector": "from src.agents.advanced_hybrid_architecture import AdaptiveModeSelector",
  "PerformanceTracker": "from src.unified_architecture.performance import PerformanceTracker",
  "MultiAgentCoordinator": "from src.agents.advanced_hybrid_architecture import MultiAgentCoordinator",
  "EmergentBehaviorDetector": "from src.agents.advanced_hybrid_architecture import EmergentBehaviorDetector",
  "PythonInterpreter": "from src.agents.advanced_hybrid_architecture import PythonInterpreter",
  "SynthesisAgent": "from src.agents.advanced_hybrid_architecture import SynthesisAgent",
  "GAIACrewOrchestrator": "from src.agents.crew_enhanced import GAIACrewOrchestrator",
  "GAIATaskFactory": "from src.agents.crew_enhanced import GAIATaskFactory",
  "EnhancedCrewExecutor": "from src.agents.crew_enhanced import EnhancedCrewExecutor",
  "StateType": "from src.agents.enhanced_fsm import StateType",
  "StateTransition": "from src.agents.enhanced_fsm import StateTransition",
  "HierarchicalState": "from src.agents.enhanced_fsm import HierarchicalState",
  "HierarchicalFSM": "from src.agents.enhanced_fsm import HierarchicalFSM",
  "AgentMetrics": "from src.agents.enhanced_fsm import AgentMetrics",
  "EnhancedFSMAgent": "from src.agents.enhanced_fsm import EnhancedFSMAgent",
  "CorrelationFilter": "from src.agents.advanced_agent_fsm import CorrelationFilter",
  "FSMState": "from src.agents.advanced_agent_fsm import FSMState",
  "ExecutionResult": "from src.application.executors.parallel_executor import ExecutionResult",
  "ValidationResult": "from src.core.services.data_quality import ValidationResult",
  "EnhancedAgentState": "from src.agents.advanced_agent_fsm import EnhancedAgentState",
  "ModelConfig": "from src.shared.types import ModelConfig",
  "FinalIntegerAnswer": "from src.agents.advanced_agent_fsm import FinalIntegerAnswer",
  "FinalStringAnswer": "from src.agents.advanced_agent_fsm import FinalStringAnswer",
  "FinalNameAnswer": "from src.agents.advanced_agent_fsm import FinalNameAnswer",
  "VerificationResult": "from src.agents.advanced_agent_fsm import VerificationResult",
  "RateLimiter": "from src.agents.advanced_agent_fsm import RateLimiter",
  "EnhancedPlanner": "from src.agents.advanced_agent_fsm import EnhancedPlanner",
  "FSMReActAgent": "from src.agents.advanced_agent_fsm import FSMReActAgent",
  "ToolDocumentation": "from src.agents.advanced_agent_fsm import ToolDocumentation",
  "ToolAnnouncement": "from src.agents.advanced_agent_fsm import ToolAnnouncement",
  "MCPToolRegistry": "from src.agents.advanced_agent_fsm import MCPToolRegistry",
  "ReasoningValidator": "from src.agents.advanced_agent_fsm import ReasoningValidator",
  "AnswerSynthesizer": "from src.agents.advanced_agent_fsm import AnswerSynthesizer",
  "GAIAAgentState": "from src.agents.advanced_agent_fsm import GAIAAgentState",
  "MigratedEnhancedFSMAgent": "from src.agents.migrated_enhanced_fsm_agent import MigratedEnhancedFSMAgent",
  "AgentRole": "from src.agents.multi_agent_system import AgentRole",
  "AgentCapability": "from examples.advanced.multiagent_api_deployment import AgentCapability",
  "MultiAgentSystem": "from src.agents.multi_agent_system import MultiAgentSystem",
  "StructuredLogger": "from src.utils.structured_logging import StructuredLogger",
  "LoggerAdapter": "from src.utils.logging import LoggerAdapter",
  "ToolsProduction": "from src.utils.tools_production import ToolsProduction",
  "FileReaderInput": "from src.utils.file_reader import FileReaderInput",
  "ErrorCategory": "from src.utils.error_category import ErrorCategory",
  "RetryStrategy": "from src.utils.error_category import RetryStrategy",
  "CircuitBreaker": "from src.shared.types.di_types import CircuitBreaker",
  "ErrorHandler": "from src.utils.error_category import ErrorHandler",
  "WeatherInput": "from src.utils.weather import WeatherInput",
  "SemanticSearchInput": "from src.utils.semantic_search_tool import SemanticSearchInput",
  "LocalKnowledgeTool": "from src.utils.knowledge_utils import LocalKnowledgeTool",
  "TavilySearchInput": "from src.utils.base_tool import TavilySearchInput",
  "VideoAnalyzerInput": "from src.utils.base_tool import VideoAnalyzerInput",
  "SemanticSearchEngine": "from src.utils.base_tool import SemanticSearchEngine",
  "DataValidationTool": "from src.utils.base_tool import DataValidationTool",
  "TavilySearch": "from src.utils.tools_enhanced import TavilySearch",
  "PythonREPLTool": "from src.utils.tools_enhanced import PythonREPLTool",
  "PythonInterpreterInput": "from src.utils.python_interpreter import PythonInterpreterInput",
  "ToolSchemaInfo": "from src.utils.tools_introspection import ToolSchemaInfo",
  "ToolCallError": "from src.utils.tools_introspection import ToolCallError",
  "ToolsIntrospection": "from src.utils.tools_introspection import ToolsIntrospection",
  "AdvancedFileReaderInput": "from src.utils.advanced_file_reader import AdvancedFileReaderInput",
  "ClarificationInput": "from src.utils.tools_interactive import ClarificationInput",
  "UserFeedbackInput": "from src.utils.tools_interactive import UserFeedbackInput",
  "ToolsInteractive": "from src.utils.tools_interactive import ToolsInteractive",
  "DataQualityLevel": "from src.core.services.data_quality import DataQualityLevel",
  "ValidatedQuery": "from src.utils.data_quality import ValidatedQuery",
  "DataQualityValidator": "from src.core.services.data_quality import DataQualityValidator",
  "ImageAnalyzerEnhancedInput": "from src.utils.tools_enhanced import ImageAnalyzerEnhancedInput",
  "ToolsEnhanced": "from src.utils.tools_enhanced import ToolsEnhanced",
  "ChatGroq": "from src.utils.tools_enhanced import ChatGroq",
  "AudioTranscriberInput": "from src.utils.audio_transcriber import AudioTranscriberInput",
  "LogLevel": "from src.core.interfaces.logging_service import LogLevel",
  "AgentConfig": "from src.infrastructure.agents.concrete_agents import AgentConfig",
  "SystemConfig": "from src.shared.types import SystemConfig",
  "TaskConfig": "from src.shared.types import TaskConfig",
  "ToolConfig": "from src.shared.types import ToolConfig",
  "DomainException": "from src.shared.exceptions import DomainException",
  "ValidationException": "from src.shared.exceptions import ValidationException",
  "InfrastructureException": "from src.shared.exceptions import InfrastructureException",
  "ApplicationException": "from src.shared.exceptions import ApplicationException",
  "ConfigurationException": "from src.shared.exceptions import ConfigurationException",
  "AgentException": "from src.shared.exceptions import AgentException",
  "TaskException": "from src.shared.exceptions import TaskException",
  "ToolException": "from src.shared.exceptions import ToolException",
  "CommunicationException": "from src.shared.exceptions import CommunicationException",
  "ResourceException": "from src.shared.exceptions import ResourceException",
  "TimeoutException": "from src.shared.exceptions import TimeoutException",
  "RateLimitException": "from src.shared.exceptions import RateLimitException",
  "AuthenticationException": "from src.shared.exceptions import AuthenticationException",
  "AuthorizationException": "from src.shared.exceptions import AuthorizationException",
  "DataException": "from src.shared.exceptions import DataException",
  "StateException": "from src.shared.exceptions import StateException",
  "FSMUnifiedAdapter": "from src.adapters.fsm_unified_adapter import FSMUnifiedAdapter",
  "UnifiedArchitectureBridge": "from src.adapters.fsm_unified_adapter import UnifiedArchitectureBridge",
  "AgentMetadata": "from examples.advanced.multiagent_api_deployment import AgentMetadata",
  "UnifiedTask": "from examples.advanced.multiagent_api_deployment import UnifiedTask",
  "IUnifiedAgent": "from src.unified_architecture.enhanced_platform import IUnifiedAgent",
  "PlatformConfig": "from src.unified_architecture.platform import PlatformConfig",
  "PlatformStats": "from src.unified_architecture.platform import PlatformStats",
  "MultiAgentPlatform": "from examples.advanced.multiagent_api_deployment import MultiAgentPlatform",
  "CollaborationDashboard": "from src.unified_architecture.dashboard import CollaborationDashboard",
  "ListingStatus": "from src.unified_architecture.marketplace import ListingStatus",
  "RatingCategory": "from src.unified_architecture.marketplace import RatingCategory",
  "AgentRating": "from src.unified_architecture.marketplace import AgentRating",
  "AgentListing": "from src.unified_architecture.marketplace import AgentListing",
  "MarketplaceStats": "from src.unified_architecture.marketplace import MarketplaceStats",
  "AgentMarketplace": "from src.unified_architecture.marketplace import AgentMarketplace",
  "OrchestrationEngine": "from src.unified_architecture.enhanced_platform import OrchestrationEngine",
  "EnhancedMultiAgentPlatform": "from src.unified_architecture.enhanced_platform import EnhancedMultiAgentPlatform",
  "ExampleUnifiedAgent": "from src.unified_architecture.enhanced_platform import ExampleUnifiedAgent",
  "StateManager": "from src.unified_architecture.state_management import StateManager",
  "UserRole": "from src.api.auth import UserRole",
  "UserCredentials": "from src.api.auth import UserCredentials",
  "UserRegistration": "from src.api.auth import UserRegistration",
  "TokenResponse": "from src.api.auth import TokenResponse",
  "AuthConfig": "from src.api.auth import AuthConfig",
  "PasswordManager": "from src.api.auth import PasswordManager",
  "TokenManager": "from src.api.auth import TokenManager",
  "UserManager": "from src.api.auth import UserManager",
  "AuthService": "from src.api.auth import AuthService",
  "RateLimitStrategy": "from src.api.rate_limiter import RateLimitStrategy",
  "RateLimitConfig": "from src.api.rate_limiter import RateLimitConfig",
  "RateLimitExceeded": "from src.api.rate_limiter import RateLimitExceeded",
  "FixedWindowRateLimiter": "from src.api.rate_limiter import FixedWindowRateLimiter",
  "SlidingWindowRateLimiter": "from src.api.rate_limiter import SlidingWindowRateLimiter",
  "TokenBucketRateLimiter": "from src.api.rate_limiter import TokenBucketRateLimiter",
  "LeakyBucketRateLimiter": "from src.api.rate_limiter import LeakyBucketRateLimiter",
  "MultiTierRateLimiter": "from src.api.rate_limiter import MultiTierRateLimiter",
  "AsyncRateLimiter": "from src.api.rate_limiter import AsyncRateLimiter",
  "RateLimitMiddleware": "from src.api.rate_limiter import RateLimitMiddleware",
  "Config": "from src.infrastructure.config import Config",
  "SupabaseLogHandler": "from src.infrastructure.database import SupabaseLogHandler",
  "SessionMetrics": "from src.infrastructure.session import SessionMetrics",
  "AsyncResponseCache": "from src.infrastructure.session import AsyncResponseCache",
  "SessionManager": "from src.infrastructure.session import SessionManager",
  "ParallelAgentPool": "from src.infrastructure.session import ParallelAgentPool",
  "SupabaseConfig": "from src.infrastructure.integrations import SupabaseConfig",
  "LangChainConfig": "from src.infrastructure.integrations import LangChainConfig",
  "CrewAIConfig": "from src.infrastructure.integrations import CrewAIConfig",
  "LlamaIndexConfig": "from src.infrastructure.integrations import LlamaIndexConfig",
  "GAIAConfig": "from src.infrastructure.integrations import GAIAConfig",
  "IntegrationConfig": "from src.infrastructure.integrations import IntegrationConfig",
  "IntegrationManager": "from src.services.integration_manager import IntegrationManager",
  "EmbeddingManager": "from src.services.embedding_manager import EmbeddingManager",
  "CircuitState": "from src.infrastructure.resilience.circuit_breaker import CircuitState",
  "CircuitBreakerConfig": "from src.infrastructure.resilience.circuit_breaker import CircuitBreakerConfig",
  "DocumentProcessor": "from src.services.knowledge_ingestion import DocumentProcessor",
  "KnowledgeLifecycleManager": "from src.services.knowledge_ingestion import KnowledgeLifecycleManager",
  "KnowledgeIngestionService": "from src.services.knowledge_ingestion import KnowledgeIngestionService",
  "MockOldRegistry": "from src.services.integration_hub_examples import MockOldRegistry",
  "UsagePatternAnalyzer": "from src.analytics.usage_analyzer import UsagePatternAnalyzer",
  "InMemoryToolRepository": "from src.infrastructure.database.in_memory_tool_repository import InMemoryToolRepository",
  "InMemorySessionRepository": "from src.infrastructure.database.in_memory_session_repository import InMemorySessionRepository",
  "InMemoryAgentRepository": "from src.infrastructure.database.in_memory_agent_repository import InMemoryAgentRepository",
  "InMemoryMessageRepository": "from src.infrastructure.database.in_memory_message_repository import InMemoryMessageRepository",
  "InMemoryUserRepository": "from src.infrastructure.database.in_memory_user_repository import InMemoryUserRepository",
  "SupabaseClient": "from src.infrastructure.database.supabase_repositories import SupabaseClient",
  "SupabaseMessageRepository": "from src.infrastructure.database.supabase_repositories import SupabaseMessageRepository",
  "SupabaseToolRepository": "from src.infrastructure.database.supabase_repositories import SupabaseToolRepository",
  "SupabaseSessionRepository": "from src.infrastructure.database.supabase_repositories import SupabaseSessionRepository",
  "SupabaseAgentRepository": "from src.infrastructure.database.supabase_repositories import SupabaseAgentRepository",
  "DIContainer": "from src.infrastructure.di.container import DIContainer",
  "ConfigurationService": "from src.shared.types.di_types import ConfigurationService",
  "FSMReactAgentImpl": "from src.infrastructure.agents.concrete_agents import FSMReactAgentImpl",
  "NextGenAgentImpl": "from src.infrastructure.agents.concrete_agents import NextGenAgentImpl",
  "CrewAgentImpl": "from src.infrastructure.agents.concrete_agents import CrewAgentImpl",
  "SpecializedAgentImpl": "from src.infrastructure.agents.concrete_agents import SpecializedAgentImpl",
  "CircuitBreakerStats": "from src.infrastructure.resilience.circuit_breaker import CircuitBreakerStats",
  "CircuitBreakerRegistry": "from src.infrastructure.resilience.circuit_breaker import CircuitBreakerRegistry",
  "WorkflowStatus": "from src.infrastructure.workflow.workflow_engine import WorkflowStatus",
  "WorkflowType": "from src.infrastructure.workflow.workflow_engine import WorkflowType",
  "WorkflowStep": "from src.infrastructure.workflow.workflow_engine import WorkflowStep",
  "WorkflowDefinition": "from src.infrastructure.workflow.workflow_engine import WorkflowDefinition",
  "WorkflowExecution": "from src.infrastructure.workflow.workflow_engine import WorkflowExecution",
  "WorkflowState": "from src.infrastructure.workflow.workflow_engine import WorkflowState",
  "WorkflowBuilder": "from src.infrastructure.workflow.workflow_engine import WorkflowBuilder",
  "AgentOrchestrator": "from src.infrastructure.workflow.workflow_engine import AgentOrchestrator",
  "ToolFactory": "from src.application.tools.tool_factory import ToolFactory",
  "ToolExecutorImpl": "from src.application.tools.tool_executor import ToolExecutorImpl",
  "AgentFactory": "from src.application.agents.agent_factory import AgentFactory",
  "BaseAgent": "from src.shared.types.di_types import BaseAgent",
  "AgentExecutorImpl": "from src.application.agents.agent_executor import AgentExecutorImpl",
  "ParallelFSMReactAgent": "from src.application.executors.parallel_executor import ParallelFSMReactAgent",
  "LoggingService": "from src.core.interfaces.logging_service import LoggingService",
  "DatabaseClient": "from src.shared.types.di_types import DatabaseClient",
  "TableClient": "from src.shared.types.di_types import TableClient",
  "QueryBuilder": "from src.shared.types.di_types import QueryBuilder",
  "TransactionContext": "from src.shared.types.di_types import TransactionContext",
  "CacheClient": "from src.shared.types.di_types import CacheClient",
  "Repository": "from src.shared.types.di_types import Repository",
  "MessageQueue": "from src.shared.types.di_types import MessageQueue",
  "EventBus": "from src.shared.types.di_types import EventBus",
  "ServiceDescriptor": "from src.shared.types.di_types import ServiceDescriptor",
  "ServiceContainer": "from src.shared.types.di_types import ServiceContainer",
  "ServiceScope": "from src.shared.types.di_types import ServiceScope",
  "UseCase": "from src.shared.types.di_types import UseCase",
  "Command": "from src.shared.types.di_types import Command",
  "ManageAgentUseCase": "from src.core.use_cases.manage_agent import ManageAgentUseCase",
  "ProcessMessageUseCase": "from src.core.use_cases.process_message import ProcessMessageUseCase",
  "ManageSessionUseCase": "from src.core.use_cases.manage_session import ManageSessionUseCase",
  "ExecuteToolUseCase": "from src.core.use_cases.execute_tool import ExecuteToolUseCase",
  "WorkingMemoryState": "from src.core.services.working_memory import WorkingMemoryState",
  "WorkingMemoryManager": "from src.core.services.working_memory import WorkingMemoryManager",
  "MetaCognitiveScore": "from src.core.services.meta_cognition import MetaCognitiveScore",
  "KnowledgeDomain": "from src.core.services.meta_cognition import KnowledgeDomain",
  "MetaCognition": "from src.core.services.meta_cognition import MetaCognition",
  "MetaCognitiveRouter": "from src.core.services.meta_cognition import MetaCognitiveRouter",
  "DataQualityMetrics": "from src.core.services.data_quality import DataQualityMetrics",
  "MessageType": "from src.core.entities.message import MessageType",
  "MessageStatus": "from src.core.entities.message import MessageStatus",
  "Message": "from src.core.entities.message import Message",
  "Conversation": "from src.core.entities.message import Conversation",
  "SessionRepository": "from src.core.interfaces.session_repository import SessionRepository",
  "ToolRepository": "from src.core.interfaces.tool_repository import ToolRepository",
  "AgentExecutor": "from src.core.interfaces.agent_executor import AgentExecutor",
  "UserRepository": "from src.core.interfaces.user_repository import UserRepository",
  "AgentRepository": "from src.core.interfaces.agent_repository import AgentRepository",
  "MessageRepository": "from src.core.interfaces.message_repository import MessageRepository",
  "PrintStatementFixer": "from scripts.fixes.fix_final_prints import PrintStatementFixer",
  "PrintTransformer": "from scripts.fixes.fix_final_prints import PrintTransformer",
  "UpgradePoint": "from scripts.setup.ai_codebase_analyzer import UpgradePoint",
  "CodebaseAnalyzer": "from scripts.setup.ai_codebase_analyzer import CodebaseAnalyzer",
  "ImplementationVerifier": "from scripts.cleanup.verify_100_percent import ImplementationVerifier",
  "FinalVerifier": "from scripts.cleanup.final_100_check import FinalVerifier",
  "EnhancedAIAgentApp": "from examples.advanced.app_enhanced_fsm import EnhancedAIAgentApp",
  "ConflictType": "from examples.advanced.multiagent_api_deployment import ConflictType",
  "Conflict": "from examples.advanced.multiagent_api_deployment import Conflict",
  "MarketplaceListing": "from examples.advanced.multiagent_api_deployment import MarketplaceListing",
  "AgentRegistry": "from examples.advanced.multiagent_api_deployment import AgentRegistry",
  "TaskManager": "from examples.advanced.multiagent_api_deployment import TaskManager",
  "ResourceManager": "from examples.advanced.multiagent_api_deployment import ResourceManager",
  "Marketplace": "from examples.advanced.multiagent_api_deployment import Marketplace",
  "ConflictResolver": "from examples.advanced.multiagent_api_deployment import ConflictResolver",
  "Dashboard": "from examples.advanced.multiagent_api_deployment import Dashboard",
  "MarketplaceListingRequest": "from examples.advanced.multiagent_api_deployment import MarketplaceListingRequest",
  "AgentSearchRequest": "from examples.advanced.multiagent_api_deployment import AgentSearchRequest",
  "ExampleAgent": "from examples.integration.unified_architecture_example import ExampleAgent",
  "DataAnalysisAgent": "from examples.integration.unified_architecture_example import DataAnalysisAgent",
  "ProcessingAgent": "from examples.integration.unified_architecture_example import ProcessingAgent",
  "CollaborationAgent": "from examples.integration.unified_architecture_example import CollaborationAgent",
  "State": "from examples.basic.demo_enhanced_fsm import State",
  "Transition": "from examples.basic.simple_hybrid_demo import Transition",
  "SimpleFSM": "from examples.basic.demo_enhanced_fsm import SimpleFSM",
  "ProbabilisticFSM": "from examples.basic.simple_hybrid_demo import ProbabilisticFSM",
  "ChainOfThought": "from examples.basic.simple_hybrid_demo import ChainOfThought",
  "SimpleTool": "from examples.basic.simple_hybrid_demo import SimpleTool",
  "DemoTools": "from examples.basic.simple_hybrid_demo import DemoTools",
  "ReActAgent": "from examples.basic.simple_hybrid_demo import ReActAgent",
  "HybridAgent": "from examples.basic.simple_hybrid_demo import HybridAgent",
  "TestAgentFactoryGlobal": "from tests.unit.test_agent_factory import TestAgentFactoryGlobal",
  "TestAgentFactoryIntegration": "from tests.unit.test_agent_factory import TestAgentFactoryIntegration",
  "TestFSMReactAgentImpl": "from tests.unit.test_concrete_agents import TestFSMReactAgentImpl",
  "TestNextGenAgentImpl": "from tests.unit.test_concrete_agents import TestNextGenAgentImpl",
  "TestCrewAgentImpl": "from tests.unit.test_concrete_agents import TestCrewAgentImpl",
  "TestSpecializedAgentImpl": "from tests.unit.test_concrete_agents import TestSpecializedAgentImpl",
  "TestAgentConfig": "from tests.unit.test_concrete_agents import TestAgentConfig",
  "TestAgentIntegration": "from tests.unit.test_concrete_agents import TestAgentIntegration",
  "TestMetricsRegistry": "from tests.unit.test_monitoring_metrics import TestMetricsRegistry",
  "TestTimingDecorators": "from tests.unit.test_monitoring_metrics import TestTimingDecorators",
  "TestContextManagers": "from tests.unit.test_circuit_breaker import TestContextManagers",
  "TestPerformanceTracker": "from tests.unit.test_monitoring_metrics import TestPerformanceTracker",
  "TestResourceMonitor": "from tests.unit.test_monitoring_metrics import TestResourceMonitor",
  "TestUtilityFunctions": "from tests.unit.test_workflow_engine import TestUtilityFunctions",
  "TestMetricsResponse": "from tests.unit.test_monitoring_metrics import TestMetricsResponse",
  "TestGlobalInstances": "from tests.unit.test_monitoring_metrics import TestGlobalInstances",
  "TestErrorHandling": "from tests.integration.test_integration import TestErrorHandling",
  "TestConcurrency": "from tests.unit.test_circuit_breaker import TestConcurrency",
  "TestCircuitBreakerConfig": "from tests.unit.test_circuit_breaker import TestCircuitBreakerConfig",
  "TestCircuitBreakerStats": "from tests.unit.test_circuit_breaker import TestCircuitBreakerStats",
  "TestCircuitBreaker": "from tests.unit.test_circuit_breaker import TestCircuitBreaker",
  "TestCircuitBreakerRegistry": "from tests.unit.test_circuit_breaker import TestCircuitBreakerRegistry",
  "TestDecorators": "from tests.unit.test_circuit_breaker import TestDecorators",
  "TestPreConfiguredConfigs": "from tests.unit.test_circuit_breaker import TestPreConfiguredConfigs",
  "TestSessionMetrics": "from tests.unit.test_session import TestSessionMetrics",
  "TestAsyncResponseCache": "from tests.unit.test_session import TestAsyncResponseCache",
  "TestRateLimiter": "from tests.unit.test_session import TestRateLimiter",
  "TestSessionManager": "from tests.unit.test_session import TestSessionManager",
  "TestInMemoryMessageRepository": "from tests.unit.test_repositories import TestInMemoryMessageRepository",
  "TestInMemorySessionRepository": "from tests.unit.test_repositories import TestInMemorySessionRepository",
  "TestInMemoryToolRepository": "from tests.unit.test_repositories import TestInMemoryToolRepository",
  "TestInMemoryUserRepository": "from tests.unit.test_repositories import TestInMemoryUserRepository",
  "TestWorkflowStep": "from tests.unit.test_workflow_engine import TestWorkflowStep",
  "TestWorkflowDefinition": "from tests.unit.test_workflow_engine import TestWorkflowDefinition",
  "TestWorkflowExecution": "from tests.unit.test_workflow_engine import TestWorkflowExecution",
  "TestWorkflowState": "from tests.unit.test_workflow_engine import TestWorkflowState",
  "TestWorkflowBuilder": "from tests.unit.test_workflow_engine import TestWorkflowBuilder",
  "TestWorkflowEngine": "from tests.unit.test_workflow_engine import TestWorkflowEngine",
  "TestWorkflowTypes": "from tests.unit.test_workflow_engine import TestWorkflowTypes",
  "TestConfig": "from tests.unit.test_config import TestConfig",
  "TestMessage": "from tests.unit.test_core_entities import TestMessage",
  "TestTool": "from tests.integration.test_integration import TestTool",
  "TestSession": "from tests.unit.test_core_entities import TestSession",
  "TestUser": "from tests.unit.test_core_entities import TestUser",
  "TestEnhancedInputValidation": "from tests.unit.test_enhanced_error_handling import TestEnhancedInputValidation",
  "TestPerformanceMonitoring": "from tests.unit.test_enhanced_error_handling import TestPerformanceMonitoring",
  "TestReasoningValidator": "from tests.unit.test_enhanced_error_handling import TestReasoningValidator",
  "TestAnswerSynthesizer": "from tests.unit.test_enhanced_error_handling import TestAnswerSynthesizer",
  "TestFSMErrorHandling": "from tests.unit.test_enhanced_error_handling import TestFSMErrorHandling",
  "TestIntegrationScenarios": "from tests.unit.test_enhanced_error_handling import TestIntegrationScenarios",
  "TestCore": "from tests.integration.test_unified_architecture import TestCore",
  "TestMockAgent": "from tests.integration.test_unified_architecture import TestMockAgent",
  "TestOrchestrationEngine": "from tests.integration.test_unified_architecture import TestOrchestrationEngine",
  "TestStateManagement": "from tests.integration.test_unified_architecture import TestStateManagement",
  "TestCommunication": "from tests.integration.test_unified_architecture import TestCommunication",
  "TestResourceManagement": "from tests.integration.test_unified_architecture import TestResourceManagement",
  "TestAgentRegistry": "from tests.integration.test_unified_architecture import TestAgentRegistry",
  "TestTaskDistribution": "from tests.integration.test_unified_architecture import TestTaskDistribution",
  "TestSharedMemory": "from tests.integration.test_unified_architecture import TestSharedMemory",
  "TestConflictResolution": "from tests.integration.test_unified_architecture import TestConflictResolution",
  "TestPerformanceTracking": "from tests.integration.test_unified_architecture import TestPerformanceTracking",
  "TestCollaborationDashboard": "from tests.integration.test_unified_architecture import TestCollaborationDashboard",
  "TestAgentMarketplace": "from tests.integration.test_unified_architecture import TestAgentMarketplace",
  "TestMultiAgentPlatform": "from tests.integration.test_unified_architecture import TestMultiAgentPlatform",
  "TestEmbeddingConsistency": "from tests.integration.test_integration import TestEmbeddingConsistency",
  "TestImportPathResolution": "from tests.integration.test_integration import TestImportPathResolution",
  "TestAsyncSyncExecution": "from tests.integration.test_integration import TestAsyncSyncExecution",
  "TestIntegrationHub": "from tests.integration.test_integration import TestIntegrationHub",
  "TestComponentIntegration": "from tests.integration.test_integration import TestComponentIntegration",
  "PerfTool": "from tests.integration.test_integration import PerfTool",
  "DummyTool": "from tests.integration.test_integration import DummyTool",
  "TestPerformanceBaselines": "from tests.performance.test_baselines import TestPerformanceBaselines"
}